base: &base
  env_vars :
    NVSHMEM_DISABLE_CUDA_VMM: 1

  dtypes: ['R32', 'R64', 'C32', 'C64']


transpose_test_base: &transpose_test_base
  <<: *base

  # Creating list of args to control order and enable easier overriding of values
  args : ['backend',
          'gx', 'gy', 'gz',
          'acx', 'acy', 'acz',
          'gdx', 'gdy', 'gdz',
          'hex' ,'hey', 'hez']

  backend: [1, 2, 3, 4, 5, 6, 7]

  gx: [128]
  gy: [124]
  gz: [132]

  acx: [0]
  acy: [0]
  acz: [0]

  gdx: [0]
  gdy: [0]
  gdz: [0]

  hex: [0]
  hey: [0]
  hez: [0]

  out_of_place: [True, False]
  managed_memory : [True, False]
  run_autotuning : False
  test_mem_order: False
  fortran_indexing: False

transpose_test_acfalse: &transpose_test_acfalse
  <<: *transpose_test_base
  acx: [0]
  acy: [0]
  acz: [0]

transpose_test_actrue: &transpose_test_actrue
  <<: *transpose_test_base
  acx: [1]
  acy: [1]
  acz: [1]

transpose_test_acmix: &transpose_test_acmix
  <<: *transpose_test_base
  backend: [1, 2] # Limit this testing to one normal and one pipelined backend
  dtypes: ['C64'] # Limit to one data type
  acx: [0, 1]
  acy: [0, 1]
  acz: [0, 1]

transpose_test_acfalse_halo: &transpose_test_acfalse_halo
  <<: *transpose_test_base
  backend: [1, 2] # Limit this testing to one normal and one pipelined backend
  dtypes: ['C64'] # Limit to one data type
  acx: [0]
  acy: [0]
  acz: [0]

  hex: [0, 1]
  hey: [0, 1]
  hez: [0, 1]

transpose_test_actrue_halo: &transpose_test_actrue_halo
  <<: *transpose_test_acfalse_halo
  acx: [1]
  acy: [1]
  acz: [1]

transpose_test_acfalse_gdimdist: &transpose_test_acfalse_gdimdist
  <<: *transpose_test_base
  backend: [1, 2] # Limit this testing to one normal and one pipelined backend
  dtypes: ['C64'] # Limit to one data type
  acx: [0]
  acy: [0]
  acz: [0]

  gdx: [0, 16]
  gdy: [0, 16]
  gdz: [0, 16]

transpose_test_actrue_gdimdist: &transpose_test_actrue_gdimdist
  <<: *transpose_test_acfalse_gdimdist
  acx: [1]
  acy: [1]
  acz: [1]

transpose_test_mem_order: &transpose_test_mem_order
  <<: *transpose_test_base
  backend: [1, 2] # Limit this testing to one normal and one pipelined backend
  dtypes: ['C64'] # Limit to one data type
  test_mem_order: true
  args : ['backend',
          'gx', 'gy', 'gz',
          'gdx', 'gdy', 'gdz',
          'hex' ,'hey', 'hez']

transpose_test_acfalse_cc:
  <<: *transpose_test_acfalse
  executable_prefix: 'cc/transpose_test'

transpose_test_actrue_cc:
  <<: *transpose_test_actrue
  executable_prefix: 'cc/transpose_test'

transpose_test_acmix_cc:
  <<: *transpose_test_acmix
  executable_prefix: 'cc/transpose_test'

transpose_test_acfalse_halo_cc:
  <<: *transpose_test_acfalse_halo
  executable_prefix: 'cc/transpose_test'

transpose_test_actrue_halo_cc:
  <<: *transpose_test_actrue_halo
  executable_prefix: 'cc/transpose_test'

transpose_test_acfalse_gdimdist_cc:
  <<: *transpose_test_acfalse_gdimdist
  executable_prefix: 'cc/transpose_test'

transpose_test_actrue_gdimdist_cc:
  <<: *transpose_test_actrue_gdimdist
  executable_prefix: 'cc/transpose_test'

transpose_test_mem_order_cc:
  <<: *transpose_test_mem_order
  executable_prefix: 'cc/transpose_test'

transpose_test_acfalse_fortran:
  <<: *transpose_test_acfalse
  executable_prefix: 'fortran/transpose_test'
  fortran_indexing: true

transpose_test_actrue_fortran:
  <<: *transpose_test_actrue
  executable_prefix: 'fortran/transpose_test'
  fortran_indexing: true

transpose_test_acmix_fortran:
  <<: *transpose_test_acmix
  executable_prefix: 'fortran/transpose_test'
  fortran_indexing: true

transpose_test_acfalse_halo_fortran:
  <<: *transpose_test_acfalse_halo
  executable_prefix: 'fortran/transpose_test'
  fortran_indexing: true

transpose_test_actrue_halo_fortran:
  <<: *transpose_test_actrue_halo
  executable_prefix: 'fortran/transpose_test'
  fortran_indexing: true

transpose_test_acfalse_gdimdist_fortran:
  <<: *transpose_test_acfalse_gdimdist
  executable_prefix: 'fortran/transpose_test'
  fortran_indexing: true

transpose_test_actrue_gdimdist_fortran:
  <<: *transpose_test_actrue_gdimdist
  executable_prefix: 'fortran/transpose_test'
  fortran_indexing: true

transpose_test_mem_order_fortran:
  <<: *transpose_test_mem_order
  executable_prefix: 'fortran/transpose_test'
  fortran_indexing: true

halo_test_base: &halo_test_base
  <<: *base

  args : ['backend',
          'gx', 'gy', 'gz',
          'acx', 'acy', 'acz',
          'gdx', 'gdy', 'gdz',
          'hex' ,'hey', 'hez',
          'hpx', 'hpy', 'hpz',
          'ax']

  backend: [1, 2, 3, 4, 5]

  gx: [128]
  gy: [132]
  gz: [124]

  acx: [0]
  acy: [0]
  acz: [0]

  gdx: [0]
  gdy: [0]
  gdz: [0]

  hex: [1]
  hey: [1]
  hez: [1]

  hpx: [1]
  hpy: [1]
  hpz: [1]

  ax: [0, 1, 2]

  managed_memory : [True, False]
  out_of_place : [False]
  run_autotuning : False
  test_mem_order: False
  fortran_indexing: False

halo_test_acfalse: &halo_test_acfalse
  <<: *halo_test_base
  acx: [0]
  acy: [0]
  acz: [0]

halo_test_actrue: &halo_test_actrue
  <<: *halo_test_base
  acx: [1]
  acy: [1]
  acz: [1]

halo_test_acfalse_halomix: &halo_test_acfalse_halomix
  <<: *halo_test_base
  backend: [1] # Limit this testing to one backend
  dtypes: ['C64'] # Limit to one data type

  acx: [0]
  acy: [0]
  acz: [0]

  hex: [0, 1]
  hey: [0, 1]
  hez: [0, 1]

  hpx: [0, 1]
  hpy: [0, 1]
  hpz: [0, 1]

halo_test_actrue_halomix: &halo_test_actrue_halomix
  <<: *halo_test_acfalse_halomix
  acx: [1]
  acy: [1]
  acz: [1]

halo_test_acfalse_gdimdist: &halo_test_acfalse_gdimdist
  <<: *halo_test_base
  backend: [1] # Limit this testing to one backend
  dtypes: ['C64'] # Limit to one data type

  acx: [0]
  acy: [0]
  acz: [0]

  gdx: [0, 16]
  gdy: [0, 16]
  gdz: [0, 16]

halo_test_actrue_gdimdist: &halo_test_actrue_gdimdist
  <<: *halo_test_acfalse_gdimdist
  acx: [1]
  acy: [1]
  acz: [1]

halo_test_mem_order: &halo_test_mem_order
  <<: *halo_test_base
  backend: [1] # Limit this testing to one backend
  dtypes: ['C64'] # Limit to one data type
  test_mem_order: true
  args : ['backend',
          'gx', 'gy', 'gz',
          'gdx', 'gdy', 'gdz',
          'hex' ,'hey', 'hez',
          'hpx', 'hpy', 'hpz',
          'ax']

halo_test_acfalse_cc:
  <<: *halo_test_acfalse
  executable_prefix: 'cc/halo_test'

halo_test_actrue_cc:
  <<: *halo_test_actrue
  executable_prefix: 'cc/halo_test'

halo_test_acfalse_halomix_cc:
  <<: *halo_test_acfalse_halomix
  executable_prefix: 'cc/halo_test'

halo_test_actrue_halomix_cc:
  <<: *halo_test_actrue_halomix
  executable_prefix: 'cc/halo_test'

halo_test_acfalse_gdimdist_cc:
  <<: *halo_test_acfalse_gdimdist
  executable_prefix: 'cc/halo_test'

halo_test_actrue_gdimdist_cc:
  <<: *halo_test_actrue_gdimdist
  executable_prefix: 'cc/halo_test'

halo_test_mem_order_cc:
  <<: *halo_test_mem_order
  executable_prefix: 'cc/halo_test'

halo_test_acfalse_fortran:
  <<: *halo_test_acfalse
  ax: [1, 2, 3]
  executable_prefix: 'fortran/halo_test'
  fortran_indexing: true

halo_test_actrue_fortran:
  <<: *halo_test_actrue
  ax: [1, 2, 3]
  executable_prefix: 'fortran/halo_test'
  fortran_indexing: true

halo_test_acfalse_halomix_fortran:
  <<: *halo_test_acfalse_halomix
  ax: [1, 2, 3]
  executable_prefix: 'fortran/halo_test'
  fortran_indexing: true

halo_test_actrue_halomix_fortran:
  <<: *halo_test_actrue_halomix
  ax: [1, 2, 3]
  executable_prefix: 'fortran/halo_test'
  fortran_indexing: true

halo_test_acfalse_gdimdist_fortran:
  <<: *halo_test_acfalse_gdimdist
  ax: [1, 2, 3]
  executable_prefix: 'fortran/halo_test'
  fortran_indexing: true

halo_test_actrue_gdimdist_fortran:
  <<: *halo_test_actrue_gdimdist
  ax: [1, 2, 3]
  executable_prefix: 'fortran/halo_test'
  fortran_indexing: true

halo_test_mem_order_fortran:
  <<: *halo_test_mem_order
  executable_prefix: 'fortran/halo_test'
  fortran_indexing: true
